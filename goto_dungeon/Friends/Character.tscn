[gd_scene load_steps=8 format=2]

[ext_resource path="res://CharacterScenes/NakedGuy.tscn" type="PackedScene" id=1]
[ext_resource path="res://Sprites/arrows.png" type="Texture" id=2]
[ext_resource path="res://Friends/Highlighter.gd" type="Script" id=3]
[ext_resource path="res://Particles/Stars.tscn" type="PackedScene" id=4]
[ext_resource path="res://Sounds/magic-wardrobe.wav" type="AudioStream" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export var player = \"p1\"
export var speed = 60
export var character_type = CharacterType.NAKED
export var naked_guy = preload(\"res://CharacterScenes/NakedGuy.tscn\")

var death_scene_path = \"res://Death.tscn\"
var character_item: KinematicBody2D = null
var look_direction = Vector2.RIGHT

var attack_cooldown = 1
var current_attack_cooldown = 0
var is_attacking = false

func _ready():
	var attacker_nodes = get_tree().get_nodes_in_group('Enemies')
	for node in attacker_nodes:
		node.connect(\"attacked_player\", self, \"_on_attacked_player\") 

func _on_attacked_player(target, attack):
	if target != self:
		pass
	elif not tumble_active and not die_active:
		tumble()
	elif tumble_active and not die_active:
		die()
	elif not tumble_active and die_active:
		pass
	elif tumble_active and die_active:
		pass

func _physics_process(delta):
	if die_active or tumble_active:
		return
	
	current_attack_cooldown -= delta
	if Input.is_action_just_pressed(player+\"_attack\"):
		if current_attack_cooldown <= 0:
			attack()
	elif is_attacking:
		pass
	elif input_drop_character():
		choose_animation(Vector2.ZERO)
	else:
		var move_vec = get_move_vec_for_player(player)
		look_direction = get_look_direction(move_vec)
		move_and_slide(move_vec * speed)
		flip_sprite(move_vec)
		choose_animation(move_vec)

var die_active = false

func die():
	tumble_cancel()
	die_active = true
	var player = $NakedGuy/AnimationPlayer
	player.playback_speed = 1
	player.play(\"Die\")
	yield(player, \"animation_finished\")
	globals.switch_scene(death_scene_path)

var tumble_active = false

func tumble():
	tumble_active = true
	var player = $NakedGuy/AnimationPlayer
	player.playback_speed = 1
	player.play(\"Idle\")
	$Stars.emitting = true
	$Stars.restart()
	yield(get_tree().create_timer(1), \"timeout\")
	tumble_cancel()

func tumble_cancel():
	tumble_active = false
	$Stars.emitting = false


# called from items too
func change_character_with_item(item: KinematicBody2D, scene: PackedScene, type):
	if character_item == null:
		character_item = item
		item.get_parent().remove_child(item)
		var node = scene.instance()
		change_character(node, type)



func change_character(node: Node2D, type):
	var before = $NakedGuy
	$sound.play()
	node.name = \"NakedGuy\"
	node.transform = before.transform
	node.get_node(\"Sprite\").flip_h = before.get_node(\"Sprite\").flip_h
	character_type = type

	remove_child(before)
	add_child(node)

func input_drop_character():
	if Input.is_action_just_pressed(player + \"_drop\") and character_type != CharacterType.NAKED:
		drop_character()
		throw_character_item()
		return true
	return false

export var attack_range = 32

func attack():
	if character_type != CharacterType.NAKED:
		is_attacking = true
		current_attack_cooldown = attack_cooldown
		var player = $NakedGuy/AnimationPlayer
		player.playback_speed = 3
		player.play(\"Attack\")
		yield(player, \"animation_finished\")
		
		is_attacking = false
		if tumble_active or die_active:
			return
		
		var target = cast_attack_ray()
		if target:
			print(\"target.on_attacked\")
			target.on_attacked()

func cast_attack_ray():
	print(\"cast_attack_ray\")
	var space_state = get_world_2d().direct_space_state
	var result = space_state.intersect_ray(
		global_position,
		global_position + attack_range * look_direction,
		[self],
		16 # monsters
	)
	print(result)
	if result and result.collider.has_method(\"on_attacked\"):
		return result.collider
	return null

func drop_character():
	var node = naked_guy.instance()
	change_character(node, CharacterType.NAKED)

func throw_character_item():
	if character_item:
		var node = character_item.duplicate()
		character_item = null
		get_parent().add_child(node)
		var from = position + Vector2.UP * 8
		var dir = look_direction
		node.throw_it(self, from, dir)


func get_look_direction(vec: Vector2):
	if vec.x < 0: return Vector2.LEFT
	if vec.x > 0: return Vector2.RIGHT
	if vec.y < 0: return Vector2.UP
	if vec.y > 0: return Vector2.DOWN
	return look_direction

func choose_animation(vec: Vector2):
	$NakedGuy/AnimationPlayer.playback_speed = 1
	if vec.x == 0 and vec.y == 0:
		$NakedGuy/AnimationPlayer.play(\"Idle\")
	else:
		$NakedGuy/AnimationPlayer.play(\"Walk\")

func flip_sprite(vec: Vector2):
	if vec.x < 0:
		$NakedGuy/Sprite.flip_h = true
	if vec.x > 0:
		$NakedGuy/Sprite.flip_h = false

func get_move_vec_for_player(player):
	var move_vec = Vector2(0, 0)
	if Input.is_action_pressed(player + \"_up\"):
		move_vec += Vector2.UP
		self.get_node(\"Highlighter\").frame = 0
	if Input.is_action_pressed(player + \"_down\"):
		move_vec += Vector2.DOWN
		self.get_node(\"Highlighter\").frame = 1
	if Input.is_action_pressed(player + \"_left\"):
		move_vec += Vector2.LEFT
		self.get_node(\"Highlighter\").frame = 2
	if Input.is_action_pressed(player + \"_right\"):
		move_vec += Vector2.RIGHT
		self.get_node(\"Highlighter\").frame = 3
	move_vec = move_vec.normalized()
	
	# test death
	#if Input.is_action_just_pressed('ui_select'):
		#globals.switch_scene(death_scene_path)
		#pass
	return move_vec
	
"

[sub_resource type="CapsuleShape2D" id=2]
radius = 7.0
height = 0.718109

[node name="Character" type="KinematicBody2D" groups=[
"Characters",
]]
z_index = 10
collision_mask = 23
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[node name="NakedGuy" parent="." instance=ExtResource( 1 )]
position = Vector2( 0.530334, -8.66206 )

[node name="Highlighter" type="Sprite" parent="."]
position = Vector2( 1.20352, 8.62366 )
scale = Vector2( 0.299722, 0.0891969 )
texture = ExtResource( 2 )
hframes = 4
script = ExtResource( 3 )

[node name="Stars" parent="." instance=ExtResource( 4 )]
position = Vector2( 0.530334, -20 )
scale = Vector2( 0.5, 0.5 )
emitting = false
lifetime = 0.33
explosiveness = 1.0

[node name="sound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )
